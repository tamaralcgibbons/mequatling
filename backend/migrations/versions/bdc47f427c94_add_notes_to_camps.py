"""Add notes to camps

Revision ID: bdc47f427c94
Revises: 
Create Date: 2025-08-15 10:56:24.925337

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'bdc47f427c94'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stock_ledger_id'), table_name='stock_ledger')
    op.drop_index(op.f('ix_stock_ledger_vaccine_id'), table_name='stock_ledger')
    op.drop_table('stock_ledger')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.drop_table('groups')
    op.drop_index(op.f('ix_vaccine_waste_events_id'), table_name='vaccine_waste_events')
    op.drop_table('vaccine_waste_events')
    op.drop_index(op.f('ix_fertiliser_events_id'), table_name='fertiliser_events')
    op.drop_table('fertiliser_events')
    op.drop_index(op.f('ix_camps_id'), table_name='camps')
    op.drop_table('camps')
    op.drop_index(op.f('ix_feeds_id'), table_name='feeds')
    op.drop_table('feeds')
    op.drop_index(op.f('ix_fuels_id'), table_name='fuels')
    op.drop_table('fuels')
    op.drop_index(op.f('ix_vaccine_events_id'), table_name='vaccine_events')
    op.drop_index(op.f('ix_vaccine_events_vaccine_id'), table_name='vaccine_events')
    op.drop_table('vaccine_events')
    op.drop_index(op.f('ix_fertilisers_id'), table_name='fertilisers')
    op.drop_table('fertilisers')
    op.drop_index(op.f('ix_animals_id'), table_name='animals')
    op.drop_index(op.f('ix_animals_tag_number'), table_name='animals')
    op.drop_table('animals')
    op.drop_index(op.f('ix_vaccinations_animal_id'), table_name='vaccinations')
    op.drop_index(op.f('ix_vaccinations_id'), table_name='vaccinations')
    op.drop_index(op.f('ix_vaccinations_vaccine_id'), table_name='vaccinations')
    op.drop_table('vaccinations')
    op.drop_index(op.f('ix_feed_events_id'), table_name='feed_events')
    op.drop_table('feed_events')
    op.drop_index(op.f('ix_vaccines_id'), table_name='vaccines')
    op.drop_table('vaccines')
    op.drop_index(op.f('ix_fuel_events_id'), table_name='fuel_events')
    op.drop_table('fuel_events')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fuel_events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('fuel_id', sa.INTEGER(), nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=False),
    sa.Column('reason', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fuel_events_id'), 'fuel_events', ['id'], unique=False)
    op.create_table('vaccines',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('default_dose', sa.FLOAT(), nullable=False),
    sa.Column('unit', sa.VARCHAR(length=20), nullable=False),
    sa.Column('methods', sa.TEXT(), nullable=True),
    sa.Column('current_stock', sa.FLOAT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_vaccines_id'), 'vaccines', ['id'], unique=False)
    op.create_table('feed_events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('feed_id', sa.INTEGER(), nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=False),
    sa.Column('reason', sa.TEXT(), nullable=True),
    sa.Column('output_feed_id', sa.INTEGER(), nullable=True),
    sa.Column('components', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feed_events_id'), 'feed_events', ['id'], unique=False)
    op.create_table('vaccinations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('animal_id', sa.INTEGER(), nullable=False),
    sa.Column('vaccine_id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('dose', sa.FLOAT(), nullable=False),
    sa.Column('method', sa.VARCHAR(length=64), nullable=True),
    sa.Column('source', sa.VARCHAR(length=16), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vaccine_id'], ['vaccines.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vaccinations_vaccine_id'), 'vaccinations', ['vaccine_id'], unique=False)
    op.create_index(op.f('ix_vaccinations_id'), 'vaccinations', ['id'], unique=False)
    op.create_index(op.f('ix_vaccinations_animal_id'), 'vaccinations', ['animal_id'], unique=False)
    op.create_table('animals',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('tag_number', sa.VARCHAR(length=64), nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('sex', sa.VARCHAR(length=1), nullable=True),
    sa.Column('birth_date', sa.DATE(), nullable=True),
    sa.Column('pregnancy_status', sa.VARCHAR(length=32), nullable=True),
    sa.Column('camp_id', sa.INTEGER(), nullable=True),
    sa.Column('group_id', sa.INTEGER(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('photo_path', sa.VARCHAR(length=512), nullable=True),
    sa.Column('deceased', sa.BOOLEAN(), nullable=False),
    sa.Column('killed', sa.BOOLEAN(), nullable=True),
    sa.Column('death_reason', sa.TEXT(), nullable=True),
    sa.Column('has_calved', sa.BOOLEAN(), nullable=False),
    sa.Column('calves_count', sa.INTEGER(), nullable=False),
    sa.Column('calves_tags', sqlite.JSON(), nullable=False),
    sa.Column('mother_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['camp_id'], ['camps.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['mother_id'], ['animals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_animals_tag_number'), 'animals', ['tag_number'], unique=False)
    op.create_index(op.f('ix_animals_id'), 'animals', ['id'], unique=False)
    op.create_table('fertilisers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('unit', sa.VARCHAR(length=20), nullable=False),
    sa.Column('current_stock', sa.FLOAT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_fertilisers_id'), 'fertilisers', ['id'], unique=False)
    op.create_table('vaccine_events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('vaccine_id', sa.INTEGER(), nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=32), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=False),
    sa.Column('reason', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['vaccine_id'], ['vaccines.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vaccine_events_vaccine_id'), 'vaccine_events', ['vaccine_id'], unique=False)
    op.create_index(op.f('ix_vaccine_events_id'), 'vaccine_events', ['id'], unique=False)
    op.create_table('fuels',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=100), nullable=False),
    sa.Column('unit', sa.VARCHAR(length=20), nullable=False),
    sa.Column('current_stock', sa.FLOAT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_index(op.f('ix_fuels_id'), 'fuels', ['id'], unique=False)
    op.create_table('feeds',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('unit', sa.VARCHAR(length=20), nullable=False),
    sa.Column('current_stock', sa.FLOAT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_feeds_id'), 'feeds', ['id'], unique=False)
    op.create_table('camps',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('greenfeed', sa.BOOLEAN(), nullable=True),
    sa.Column('greenfeed_planting_date', sa.DATE(), nullable=True),
    sa.Column('greenfeed_amount', sa.FLOAT(), nullable=True),
    sa.Column('fertilised_date', sa.DATE(), nullable=True),
    sa.Column('fertilised_amount', sa.FLOAT(), nullable=True),
    sa.Column('grazed_status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('grazed_out_date', sa.DATE(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_camps_id'), 'camps', ['id'], unique=False)
    op.create_table('fertiliser_events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('fertiliser_id', sa.INTEGER(), nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=False),
    sa.Column('reason', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fertiliser_events_id'), 'fertiliser_events', ['id'], unique=False)
    op.create_table('vaccine_waste_events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('vaccine_id', sa.INTEGER(), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=False),
    sa.Column('reason', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vaccine_waste_events_id'), 'vaccine_waste_events', ['id'], unique=False)
    op.create_table('groups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('camp_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['camp_id'], ['camps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=False)
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_table('stock_ledger',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('vaccine_id', sa.INTEGER(), nullable=False),
    sa.Column('delta', sa.FLOAT(), nullable=False),
    sa.Column('reason', sa.VARCHAR(length=255), nullable=True),
    sa.Column('ref_type', sa.VARCHAR(length=32), nullable=True),
    sa.Column('ref_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('balance_after', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['vaccine_id'], ['vaccines.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_ledger_vaccine_id'), 'stock_ledger', ['vaccine_id'], unique=False)
    op.create_index(op.f('ix_stock_ledger_id'), 'stock_ledger', ['id'], unique=False)
    # ### end Alembic commands ###
